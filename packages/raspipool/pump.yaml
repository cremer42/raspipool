sensor:
  - platform: template
    sensors:
      cycle_pool:
        unique_id: next_cycle
        friendly_name: "Next Cycle Pump"
        value_template: >-
          {% if is_state('sensor.pool_temp','unknown') %}
            {% set temp = states('sensor.pre_filter_temp')|float %}
          {%- else -%}
            {% set temp = states('sensor.pre_filter_temp')|float %}
          {%- endif -%}
          {{ ( state_attr('input_datetime.recirculation','timestamp')|float *
            ( 1 - is_state('input_boolean.turbo','on')|int * states('input_number.turbo')|float * 2 / 300 ) *
            ( temp / [1, ( 9 - temp / 2)]|max ) /
            ( states('input_number.quality')|float + 6 ) )|round(0) | timestamp_custom('%H:%M', false) }}
        entity_id:
        - sensor.pool_temp
        - sensor.pre_filter_temp
        - input_number.cycle
        - input_number.quality
        icon_template: >-
          {% if states('input_number.cycle')|int < 0 %}
            mdi:water-off
          {% elif states('input_number.cycle')|int < 240 %}
            mdi:weather-snowy
          {% elif states('input_number.cycle')|int >= 1440 %}
            mdi:numeric-{{ (states('input_number.cycle')|int / 1440)|int }}-box-multiple-outline
          {% else %}
            mdi:weather-sunny
          {% endif %}

input_number:
  out_of_order:
    min: -1
    max: 10
    unit_of_measurement: 'Days'
    icon: mdi:engine-off
    name: Out of Order
  first_cycle:
    min: 0
    max: 12
    step: .5
    unit_of_measurement: 'Hours'
    mode: box
    icon: mdi:numeric-1
    name: First Cycle
  second_cycle:
    min: 0
    max: 12
    step: .5
    unit_of_measurement: 'Hours'
    mode: box
    icon: mdi:numeric-2
    name: Second Cycle
  cycle_delay:
    min: 0
    max: 24
    step: .5
    unit_of_measurement: 'Hours'
    mode: box
    icon: mdi:clock-minus-outline
    name: Cycle Delay    
    
automation:
  - alias: Control Pool Pump
    trigger:
    - platform: template
      value_template: "{{ states.sensor.time.state == (states.input_datetime.cycle_start.attributes.timestamp
      | int | timestamp_custom('%H:%M', False)) }}"
    condition:
        entity_id: inputboolean.summer_mode
        value: true
    action:
      - service: switch.turn_on
        entity_id: switch.pump
      - delay:
          hours: "{{ states('input_number.first_cycle') }}"
      - service: switch.turn_off
        entity_id: switch.pump
      - delay:
          hours: "{{ states('input_number.cycle_delay') }}"
      - service: switch.turn_on
        entity_id: switch.pump
      - delay:
          hours: "{{ states('input_number.second_cycle') }}"
      - service: switch.turn_off
        entity_id: switch.pump
        
  - entity_id: switch.pump
    service: switch.turn_on
  - data_template:
      message: "@ {{now().strftime('%H:%M')}} on [{{now().month}}/{{now().day}}]"
      title: "Pump Started"
#    service: notify.pushbullet
    service: notify.jason      

 
